// @generated by protoc-gen-connect-es v1.7.0 with parameter "target=ts"
// @generated from file auth/v1/auth.proto (package auth.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ExchangeCodeRequest, ExchangeCodeResponse, GetAuthorizationURLRequest, GetAuthorizationURLResponse, GetProfileRequest, GetProfileResponse, RefreshTokenRequest, RefreshTokenResponse, VerifyTokenRequest, VerifyTokenResponse } from "./auth_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * AuthService handles WOFF (Works Office) authentication operations
 *
 * @generated from service auth.v1.AuthService
 */
export const AuthService = {
  typeName: "auth.v1.AuthService",
  methods: {
    /**
     * GetAuthorizationURL returns the WOFF OAuth authorization URL
     *
     * @generated from rpc auth.v1.AuthService.GetAuthorizationURL
     */
    getAuthorizationURL: {
      name: "GetAuthorizationURL",
      I: GetAuthorizationURLRequest,
      O: GetAuthorizationURLResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ExchangeCode exchanges authorization code for access token
     *
     * @generated from rpc auth.v1.AuthService.ExchangeCode
     */
    exchangeCode: {
      name: "ExchangeCode",
      I: ExchangeCodeRequest,
      O: ExchangeCodeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetProfile returns the authenticated user's profile (requires WOFF access token)
     *
     * @generated from rpc auth.v1.AuthService.GetProfile
     */
    getProfile: {
      name: "GetProfile",
      I: GetProfileRequest,
      O: GetProfileResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RefreshToken refreshes an existing WOFF access token
     *
     * @generated from rpc auth.v1.AuthService.RefreshToken
     */
    refreshToken: {
      name: "RefreshToken",
      I: RefreshTokenRequest,
      O: RefreshTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * VerifyToken verifies a WOFF access token
     *
     * @generated from rpc auth.v1.AuthService.VerifyToken
     */
    verifyToken: {
      name: "VerifyToken",
      I: VerifyTokenRequest,
      O: VerifyTokenResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

